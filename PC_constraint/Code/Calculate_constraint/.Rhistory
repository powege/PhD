H_df <- H_intron[H_df, on = "ensembl_transcript_id"]
H_df <- H_regional[H_df, on = "ensembl_gene_id"]
# Mouse
M_SNV_counts <- M_SNV_counts[,c("ensembl_transcript_id", "n_synonymous","n_missense",
"n_nonsense", "n_spliceAD", "n_intron")]
colnames(M_SNV_counts) <- c("ensembl_transcript_id",
paste0(c("n_synonymous", "n_missense", "n_nonsense", "n_spliceAD", "n_intron"), "_0.0001"))
M_regional <- M_regional[,c("ensembl_gene_id", "r_mu")]
M_df <- M_SNV_counts[M_Pmu, on = "ensembl_transcript_id"]
M_df <- M_intron[M_df, on = "ensembl_transcript_id"]
M_df <- M_regional[M_df, on = "ensembl_gene_id"]
### COMBINE BY OTHOLOGS
orths <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Ensembl/HM_Ensembl_orthologs.csv")
colnames(M_df) <- paste0("M_", colnames(M_df))
colnames(H_df) <- paste0("H_", colnames(H_df))
orth_out <- orths[M_df, on = c("M_ensembl_transcript_id", "M_ensembl_gene_id")]
orth_out <- orth_out[H_df, on = c("H_ensembl_transcript_id", "H_ensembl_gene_id")]
# subset one_to_one orthologs
orth_out <- subset(orth_out, orth_out$orthology_type == "ortholog_one2one")
orth_out$intron_length <- (orth_out$H_intron_length + orth_out$M_intron_length)/2
orth_out$cds_length <- (orth_out$H_cds_length + orth_out$M_cds_length)/2
orth_out$p_syn <- (orth_out$H_p_syn + orth_out$M_p_syn)/2
orth_out$p_mis <- (orth_out$H_p_mis + orth_out$M_p_mis)/2
orth_out$p_non <- (orth_out$H_p_non + orth_out$M_p_non)/2
orth_out$r_mu <- (orth_out$H_r_mu + orth_out$M_r_mu)/2
orth_out$n_synonymous_0.001 <- (orth_out$H_n_synonymous_0.0001 + orth_out$M_n_synonymous_0.0001)/2
orth_out$n_missense_0.001 <- (orth_out$H_n_missense_0.001 + orth_out$M_n_missense_0.0001)
orth_out$n_nonsense_0.001 <- (orth_out$H_n_nonsense_0.001 + orth_out$M_n_nonsense_0.0001)
orth_out$n_spliceAD_0.001 <- (orth_out$H_n_spliceAD_0.001 + orth_out$M_n_spliceAD_0.0001)
orth_out$n_intron_0.001 <- (orth_out$H_n_intron_0.0001 + orth_out$M_n_intron_0.0001)/2
df <- orth_out[,c("H_external_gene_name", "H_ensembl_gene_id", "H_ensembl_transcript_id",
"intron_length", "cds_length",
"p_syn", "p_mis", "p_non", "r_mu", "n_synonymous_0.001",
"n_missense_0.001", "n_nonsense_0.001", "n_spliceAD_0.001", "n_intron_0.001")]
# Human
HM_misZ <- mis_Z(df, "0.001")
rm(list = ls())
graphics.off()
library(data.table)
library(ggplot2)
library(MASS)
source("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Code/Calculate_constraint/function_funZ.R")
source("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Code/Calculate_constraint/function_misZ.R")
source("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Code/Calculate_constraint/function_RVIS.R")
### IMPORT DATA
# Human
H_SNV_counts <- fread("../../Data/SNV_counts/1000GP_canPC_SNV_counts.txt")
H_Pmu <- fread("../../Data/Sequence_Pmu/H_k3mer_canPC_Pmu.csv")
H_intron <- fread("../../Data/Ensembl/H_intron_length.csv")
H_regional <- fread("../../Data/Mu_rates/H_regional_mu_rates.csv")
# Mouse
M_SNV_counts <- fread("../../Data/SNV_counts/MGP_canPC_SNV_counts.txt")
M_Pmu <- fread("../../Data/Sequence_Pmu/M_k3mer_canPC_Pmu.csv")
M_intron <- fread("../../Data/Ensembl/M_intron_length.csv")
M_regional <- fread("../../Data/Mu_rates/M_regional_mu_rates.csv")
### FORMAT
# Human
H_SNV_counts <- H_SNV_counts[,c("ensembl_transcript_id", "n_synonymous_0.0001","n_missense_0.0001",
"n_nonsense_0.0001", "n_spliceAD_0.0001", "n_intron_0.0001",
"n_synonymous_0.0005", "n_missense_0.0005", "n_nonsense_0.0005",
"n_spliceAD_0.0005", "n_intron_0.0005", "n_synonymous_0.001",
"n_missense_0.001", "n_nonsense_0.001", "n_spliceAD_0.001",
"n_intron_0.001")]
H_regional <- H_regional[,c("ensembl_gene_id", "r_mu")]
H_df <- H_SNV_counts[H_Pmu, on = "ensembl_transcript_id"]
H_df <- H_intron[H_df, on = "ensembl_transcript_id"]
H_df <- H_regional[H_df, on = "ensembl_gene_id"]
# Mouse
M_SNV_counts <- M_SNV_counts[,c("ensembl_transcript_id", "n_synonymous","n_missense",
"n_nonsense", "n_spliceAD", "n_intron")]
colnames(M_SNV_counts) <- c("ensembl_transcript_id",
paste0(c("n_synonymous", "n_missense", "n_nonsense", "n_spliceAD", "n_intron"), "_0.0001"))
M_regional <- M_regional[,c("ensembl_gene_id", "r_mu")]
M_df <- M_SNV_counts[M_Pmu, on = "ensembl_transcript_id"]
M_df <- M_intron[M_df, on = "ensembl_transcript_id"]
M_df <- M_regional[M_df, on = "ensembl_gene_id"]
### COMBINE BY OTHOLOGS
orths <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Ensembl/HM_Ensembl_orthologs.csv")
colnames(M_df) <- paste0("M_", colnames(M_df))
colnames(H_df) <- paste0("H_", colnames(H_df))
orth_out <- orths[M_df, on = c("M_ensembl_transcript_id", "M_ensembl_gene_id")]
orth_out <- orth_out[H_df, on = c("H_ensembl_transcript_id", "H_ensembl_gene_id")]
# subset one_to_one orthologs
orth_out <- subset(orth_out, orth_out$orthology_type == "ortholog_one2one")
orth_out$intron_length <- (orth_out$H_intron_length + orth_out$M_intron_length)/2
orth_out$cds_length <- (orth_out$H_cds_length + orth_out$M_cds_length)/2
orth_out$p_syn <- (orth_out$H_p_syn + orth_out$M_p_syn)/2
orth_out$p_mis <- (orth_out$H_p_mis + orth_out$M_p_mis)/2
orth_out$p_non <- (orth_out$H_p_non + orth_out$M_p_non)/2
orth_out$r_mu <- (orth_out$H_r_mu + orth_out$M_r_mu)/2
orth_out$n_synonymous_0.001 <- (orth_out$H_n_synonymous_0.0001 + orth_out$M_n_synonymous_0.0001)/2
orth_out$n_missense_0.001 <- (orth_out$H_n_missense_0.001 + orth_out$M_n_missense_0.0001)
orth_out$n_nonsense_0.001 <- (orth_out$H_n_nonsense_0.001 + orth_out$M_n_nonsense_0.0001)
orth_out$n_spliceAD_0.001 <- (orth_out$H_n_spliceAD_0.001 + orth_out$M_n_spliceAD_0.0001)
orth_out$n_intron_0.001 <- (orth_out$H_n_intron_0.0001 + orth_out$M_n_intron_0.0001)/2
df <- orth_out[,c("H_external_gene_name", "H_ensembl_gene_id", "H_ensembl_transcript_id",
"intron_length", "cds_length",
"p_syn", "p_mis", "p_non", "r_mu", "n_synonymous_0.001",
"n_missense_0.001", "n_nonsense_0.001", "n_spliceAD_0.001", "n_intron_0.001")]
colnames(df) <- c("external_gene_name", "ensembl_gene_id", "ensembl_transcript_id",
"intron_length", "cds_length",
"p_syn", "p_mis", "p_non", "r_mu", "n_synonymous_0.001",
"n_missense_0.001", "n_nonsense_0.001", "n_spliceAD_0.001", "n_intron_0.001")
# Human
HM_misZ <- mis_Z(df, "0.001")
rm(list = ls())
graphics.off()
library(data.table)
library(ggplot2)
library(MASS)
source("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Code/Calculate_constraint/function_funZ.R")
source("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Code/Calculate_constraint/function_misZ.R")
source("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Code/Calculate_constraint/function_RVIS.R")
### IMPORT DATA
# Human
H_SNV_counts <- fread("../../Data/SNV_counts/1000GP_canPC_SNV_counts.txt")
H_Pmu <- fread("../../Data/Sequence_Pmu/H_k3mer_canPC_Pmu.csv")
H_intron <- fread("../../Data/Ensembl/H_intron_length.csv")
H_regional <- fread("../../Data/Mu_rates/H_regional_mu_rates.csv")
# Mouse
M_SNV_counts <- fread("../../Data/SNV_counts/MGP_canPC_SNV_counts.txt")
M_Pmu <- fread("../../Data/Sequence_Pmu/M_k3mer_canPC_Pmu.csv")
M_intron <- fread("../../Data/Ensembl/M_intron_length.csv")
M_regional <- fread("../../Data/Mu_rates/M_regional_mu_rates.csv")
### FORMAT
# Human
H_SNV_counts <- H_SNV_counts[,c("ensembl_transcript_id", "n_synonymous_0.0001","n_missense_0.0001",
"n_nonsense_0.0001", "n_spliceAD_0.0001", "n_intron_0.0001",
"n_synonymous_0.0005", "n_missense_0.0005", "n_nonsense_0.0005",
"n_spliceAD_0.0005", "n_intron_0.0005", "n_synonymous_0.001",
"n_missense_0.001", "n_nonsense_0.001", "n_spliceAD_0.001",
"n_intron_0.001")]
H_regional <- H_regional[,c("ensembl_gene_id", "r_mu")]
H_df <- H_SNV_counts[H_Pmu, on = "ensembl_transcript_id"]
H_df <- H_intron[H_df, on = "ensembl_transcript_id"]
H_df <- H_regional[H_df, on = "ensembl_gene_id"]
# Mouse
M_SNV_counts <- M_SNV_counts[,c("ensembl_transcript_id", "n_synonymous","n_missense",
"n_nonsense", "n_spliceAD", "n_intron")]
colnames(M_SNV_counts) <- c("ensembl_transcript_id",
paste0(c("n_synonymous", "n_missense", "n_nonsense", "n_spliceAD", "n_intron"), "_0.0001"))
M_regional <- M_regional[,c("ensembl_gene_id", "r_mu")]
M_df <- M_SNV_counts[M_Pmu, on = "ensembl_transcript_id"]
M_df <- M_intron[M_df, on = "ensembl_transcript_id"]
M_df <- M_regional[M_df, on = "ensembl_gene_id"]
### COMBINE BY OTHOLOGS
orths <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Ensembl/HM_Ensembl_orthologs.csv")
colnames(M_df) <- paste0("M_", colnames(M_df))
colnames(H_df) <- paste0("H_", colnames(H_df))
orth_out <- orths[M_df, on = c("M_ensembl_transcript_id", "M_ensembl_gene_id")]
orth_out <- orth_out[H_df, on = c("H_ensembl_transcript_id", "H_ensembl_gene_id")]
# subset one_to_one orthologs
orth_out <- subset(orth_out, orth_out$orthology_type == "ortholog_one2one")
orth_out$intron_length <- (orth_out$H_intron_length + orth_out$M_intron_length)/2
orth_out$cds_length <- (orth_out$H_cds_length + orth_out$M_cds_length)/2
orth_out$p_syn <- (orth_out$H_p_syn + orth_out$M_p_syn)/2
orth_out$p_mis <- (orth_out$H_p_mis + orth_out$M_p_mis)/2
orth_out$p_non <- (orth_out$H_p_non + orth_out$M_p_non)/2
orth_out$r_mu <- (orth_out$H_r_mu + orth_out$M_r_mu)/2
orth_out$n_synonymous_0.001 <- (orth_out$H_n_synonymous_0.0001 + orth_out$M_n_synonymous_0.0001)/2
orth_out$n_missense_0.001 <- (orth_out$H_n_missense_0.001 + orth_out$M_n_missense_0.0001)
orth_out$n_nonsense_0.001 <- (orth_out$H_n_nonsense_0.001 + orth_out$M_n_nonsense_0.0001)
orth_out$n_spliceAD_0.001 <- (orth_out$H_n_spliceAD_0.001 + orth_out$M_n_spliceAD_0.0001)
orth_out$n_intron_0.001 <- (orth_out$H_n_intron_0.0001 + orth_out$M_n_intron_0.0001)/2
df <- orth_out[,c("H_external_gene_name", "H_ensembl_gene_id", "H_ensembl_transcript_id",
"intron_length", "cds_length",
"p_syn", "p_mis", "p_non", "r_mu", "n_synonymous_0.001",
"n_missense_0.001", "n_nonsense_0.001", "n_spliceAD_0.001", "n_intron_0.001")]
colnames(df) <- c("external_gene_name", "ensembl_gene_id", "ensembl_transcript_id",
"intron_length", "cds_length",
"p_syn", "p_mis", "p_non", "r_mu", "n_synonymous_0.001",
"n_missense_0.001", "n_nonsense_0.001", "n_spliceAD_0.001", "n_intron_0.001")
### Calculate misZ
# Human
HM_misZ <- mis_Z(df, "0.001")
summary(HM_misZ[[2]])
sqrt(H_misZ_0.001[[3]])
sqrt(HM_misZ[[3]])
HM_misZ_df <- HM_misZ[[1]]
hist(HM_misZ_df$mis_Z_0.001)
# Human
HM_RVIS <- RVIS(df, fun_maf = "0.001", all_maf = "0.001")
source('~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Code/Calculate_constraint/HM_combined_constraint.R')
plot(HM_RVIS_df$RVIS_0.001, HM_misZ_df$mis_Z_0.001)
out <- merge(HM_misZ_df, HM_RVIS_df, all = T)
View(out)
plot(out$mis_Z_0.001, out$RVIS_0.001)
fwrite(out, "~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/HM_combined_constriant.csv")
rm(list = ls())
graphics.off()
library(data.table)
library(pROC)
library(MASS)
omim <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Disease/OMIM_Petrovski2013_Dataset_S1.csv")
newC <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/HM_constriant_orth.csv")
RVIS_esp <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/RVIS_Petrovski2013_ESP.csv")
Lek <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/H_CS_fordist_cleaned_exac_r03_march16_z_pli_rec_null_data.txt")
comC <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/HM_combined_constriant.csv")
### # convert "" to NA
omim[omim==""] <- NA
# colnames
colnames(RVIS_esp) <- c("H_external_gene_name", "RVIS_ESP", "RVIS_ESP_percentile")
Lek <- Lek[,c("gene", "mis_z", "lof_z", "pLI")]
colnames(Lek) <- c("H_external_gene_name", "mis_z_Lek", "lof_z_Lek", "pLI_Lek")
# percentiles
RVIS_esp$RVIS_ESP_percentile <- RVIS_esp$RVIS_ESP_percentile/100
percentile <- ecdf(Lek$mis_z_Lek)
Lek$mis_z_percentile_Lek <- percentile(Lek$mis_z_Lek)
percentile <- ecdf(Lek$lof_z_Lek)
Lek$lof_z_percentile_Lek <- percentile(Lek$lof_z_Lek)
percentile <- ecdf(Lek$pLI_Lek)
Lek$pLI_percentile_Lek <- percentile(Lek$pLI_Lek)
colnames(comC)
rm(list = ls())
graphics.off()
library(data.table)
library(pROC)
library(MASS)
### IMPORT
omim <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Disease/OMIM_Petrovski2013_Dataset_S1.csv")
newC <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/HM_constriant_orth.csv")
RVIS_esp <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/RVIS_Petrovski2013_ESP.csv")
Lek <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/H_CS_fordist_cleaned_exac_r03_march16_z_pli_rec_null_data.txt")
comC <- fread("~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Data/Constraint_scores/HM_combined_constriant.csv")
### FORMAT
### # convert "" to NA
omim[omim==""] <- NA
# colnames
colnames(RVIS_esp) <- c("H_external_gene_name", "RVIS_ESP", "RVIS_ESP_percentile")
Lek <- Lek[,c("gene", "mis_z", "lof_z", "pLI")]
colnames(Lek) <- c("H_external_gene_name", "mis_z_Lek", "lof_z_Lek", "pLI_Lek")
colnames(comC) <- c("H_external_gene_name","H_ensembl_gene_id","H_ensembl_transcript_id",
"HM_mis_Z_0.001","HM_mis_Z_percentile_0.001","HM_RVIS_0.001",
"HM_RVIS_percentile_0.001")
# percentiles
RVIS_esp$RVIS_ESP_percentile <- RVIS_esp$RVIS_ESP_percentile/100
percentile <- ecdf(Lek$mis_z_Lek)
Lek$mis_z_percentile_Lek <- percentile(Lek$mis_z_Lek)
percentile <- ecdf(Lek$lof_z_Lek)
Lek$lof_z_percentile_Lek <- percentile(Lek$lof_z_Lek)
percentile <- ecdf(Lek$pLI_Lek)
Lek$pLI_percentile_Lek <- percentile(Lek$pLI_Lek)
df <- merge(Lek, RVIS_esp, all = T)
df <- merge(df, newC, all = T)
df <- merge(df, comC, all = T)
df <- df[!is.na(df$H_external_gene_name),]
df <- df[df$H_external_gene_name != "",]
# Set gene lists
recesive <- na.omit(unique(omim$`OMIM Recessive`))
df$OMIM.recessive <- 0
df$OMIM.recessive[df$H_external_gene_name %in% recesive] <- 1
haploinsufficient <- na.omit(unique(omim$`OMIM Haploinsufficiency`))
df$OMIM.hap <- 0
df$OMIM.hap[df$H_external_gene_name %in% haploinsufficient] <- 1
dom.neg <- na.omit(unique(omim$`OMIM Dominant Negative`))
df$OMIM.domneg <- 0
df$OMIM.domneg[df$H_external_gene_name %in% dom.neg] <- 1
denovo <- na.omit(unique(omim$`OMIM de novo`))
df$OMIM.denovo <- 0
df$OMIM.denovo[df$H_external_gene_name %in% denovo] <- 1
omim.all <- na.omit(unique(omim$`OMIM disease genes`))
df$OMIM.all <- 0
df$OMIM.all[df$H_external_gene_name %in% omim.all] <- 1
### N OMIM groups
n.recessive <- length(df$OMIM.recessive[df$OMIM.recessive == 1])
n.hap <- length(df$OMIM.hap[df$OMIM.hap == 1])
n.domneg <- length(df$OMIM.domneg[df$OMIM.domneg == 1])
n.denovo <- length(df$OMIM.denovo[df$OMIM.denovo == 1])
n.all <- length(df$OMIM.all[df$OMIM.all == 1])
# x <-c("H_funZ_percentile", "OMIM.recessive", "OMIM.hap", "OMIM.domneg", "OMIM.denovo", "OMIM.all")
boxplot.OMIM <- function(x){
box.df <- df[ ,x, with = F]
colnames(box.df) <- c(x[1],
paste0("Rec"),
paste0("Hap"),
paste0("DNeg"),
paste0("Denovo"),
paste0("All"))
box.df <- melt(box.df, id.vars = x[1])
box.df$value[box.df$value == 1] <- "In OMIM set"
box.df$value[box.df$value == 0] <- "Not in OMIM set"
ind <- which(box.df[,1] > -2 & box.df[,1] < 2)
box.df <- box.df[ind,]
box.df <- as.data.frame(box.df)
box.df$value <- as.factor(box.df$value)
out.box <- ggplot(box.df, aes_string(x=box.df[,2], y=box.df[,1], fill=box.df[,3])) +
geom_boxplot() +
ylab("Percentile") +
xlab("") +
scale_fill_manual(values=c("gray70", "gray100", "gray100")) +
theme_classic() +
theme(legend.title=element_blank(),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
legend.text=element_text(size=14),
legend.position="top")
out.box
# medians <- box.df[, .(median(value)), by = c("IMPC.Viability.2", "variable")][order(IMPC.Viability.2, variable)]
return(out.box)
}
# x <- c("OMIM.denovo",
#        "mis_z_percentile_Lek","lof_z_percentile_Lek",
#        "pLI_Lek","RVIS_ESP_percentile",
#        "H_fun_Z_0.001", "H_fun_Z_0.0005", "H_fun_Z_0.0001",
#        "H_mis_Z_0.001", "H_mis_Z_0.0005", "H_mis_Z_0.0001",
#        "H_RVIS_0.001", "H_RVIS_0.0005",
#        "M_RVIS_0.0001", "M_mis_Z_0.0001", "M_fun_Z_0.0001")
kapow <- function(x){
glm.data <- df[, x, with = F]
col10 <- names(glm.data)[-1]
glm.list <- vector("list", length(col10))
ROC.vec <- rep(NA, length(col10))
for(i in seq_along(col10)){
glm.list[[i]] <- glm(reformulate(col10[i], names(glm.data)[1]), data = glm.data, family=binomial)
pred <- predict(glm.list[[i]], glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
ROC.vec[i] <- auc(roc(obs, pred))
}
names(ROC.vec) <- col10
out <- list(glm.list, ROC.vec)
return(out)
}
colnames(df)
source('~/Dropbox/BitBucket_repos/phd/PC_constraint/Paper/Code/Disease_association/predict_OMIM.R')
View(test)
View(test)
#####
x <- c("OMIM.all",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_0.001", "H_fun_Z_0.0005", "H_fun_Z_0.0001",
"H_mis_Z_0.001", "H_mis_Z_0.0005", "H_mis_Z_0.0001",
"H_RVIS_0.001", "H_RVIS_0.0005",
"M_RVIS_0.0001", "M_mis_Z_0.0001", "M_fun_Z_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.all ~ H_RVIS_0.001 + H_mis_Z_0.0005 + M_RVIS_0.0001 + M_mis_Z_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
cor.test(glm.data$M_mis_Z_0.0001, glm.data$H_RVIS_0.001)
cor.test(df$M_mis_Z_percentile_0.0001, df$H_RVIS_percentile_0.001)
#####
x <- c("OMIM.all",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.all ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
glm <- glm(OMIM.all ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.001 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
#####
x <- c("OMIM.denovo",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.all ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
#####
x <- c("OMIM.denovo",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.all ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
glm <- glm(OMIM.denovo ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
#####
x <- c("OMIM.domneg",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.domneg ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
#####
x <- c("OMIM.hap",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.hap ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
#####
x <- c("OMIM.rec",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.rec ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
#####
x <- c("OMIM.recessive",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.recessive ~ H_RVIS_percentile_0.001 + H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 + M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
#####
x <- c("OMIM.recessive",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.recessive ~ mis_z_percentile_Lek + lof_z_percentile_Lek +
pLI_Lek + H_RVIS_percentile_0.001 +
H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 +
M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
#####
x <- c("OMIM.all",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.recessive ~ mis_z_percentile_Lek + lof_z_percentile_Lek +
pLI_Lek + H_RVIS_percentile_0.001 +
H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 +
M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
#####
x <- c("OMIM.all",
"mis_z_percentile_Lek","lof_z_percentile_Lek",
"pLI_Lek","RVIS_ESP_percentile",
"H_fun_Z_percentile_0.001", "H_fun_Z_percentile_0.0005", "H_fun_Z_percentile_0.0001",
"H_mis_Z_percentile_0.001", "H_mis_Z_percentile_0.0005", "H_mis_Z_percentile_0.0001",
"H_RVIS_percentile_0.001", "H_RVIS_percentile_0.0005",
"M_RVIS_percentile_0.0001", "M_mis_Z_percentile_0.0001", "M_fun_Z_percentile_0.0001",
"HM_mis_Z_0.001", "HM_RVIS_0.001")
glm.data <- df[, x, with = F]
glm <- glm(OMIM.all ~ mis_z_percentile_Lek + lof_z_percentile_Lek +
pLI_Lek + H_RVIS_percentile_0.001 +
H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 +
M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
glm <- glm(OMIM.all ~ mis_z_percentile_Lek + lof_z_percentile_Lek +
pLI_Lek + H_RVIS_percentile_0.001 +
H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 +
M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
glm <- glm(OMIM.all ~
# mis_z_percentile_Lek + lof_z_percentile_Lek +
# pLI_Lek +
H_RVIS_percentile_0.001 +
H_mis_Z_percentile_0.0005 + M_RVIS_percentile_0.0001 +
M_mis_Z_percentile_0.0001, data = glm.data, family=binomial)
summary(glm)
pred <- predict(glm, glm.data)
obs <- as.numeric(unlist(glm.data[,1]))
auc(roc(obs, pred))
